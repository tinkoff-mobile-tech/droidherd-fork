apply plugin: 'maven-publish'
apply plugin: 'signing'

def isReleaseBuild() {
    return project.getVersion().toString().contains("SNAPSHOT") == false
}

def getReleaseRepositoryUrl() {
    return hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL
            : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
}

def getSnapshotRepositoryUrl() {
    return hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL
            : "https://oss.sonatype.org/content/repositories/snapshots/"
}

def getRepositoryUsername() {
    return hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : ""
}

def getRepositoryPassword() {
    return hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : ""
}

def isCI() {
    return hasProperty('IS_CI') ? IS_CI == "true" : false
}

java {
    withJavadocJar()
    withSourcesJar()
}

afterEvaluate {
    publishing {
        repositories {
            maven {
                def releaseRepositoryUrl = getReleaseRepositoryUrl()
                def snapshotRepositoryUrl = getSnapshotRepositoryUrl()
                url = isReleaseBuild() ? releaseRepositoryUrl : snapshotRepositoryUrl
                credentials {
                    username = getRepositoryUsername()
                    password = getRepositoryPassword()
                }
            }
        }

        publications {
            release(MavenPublication) {
                groupId = GROUP
                artifactId = POM_ARTIFACT_ID
                version = project.getVersion().toString()

                from(project.components.java)

                pom {
                    name = POM_NAME
                    packaging = POM_PACKAGING
                    description = POM_DESCRIPTION
                    url = POM_URL

                    scm {
                        url = POM_SCM_URL
                        connection = POM_SCM_CONNECTION
                        developerConnection = POM_SCM_DEV_CONNECTION
                    }

                    licenses {
                        license {
                            name = POM_LICENCE_NAME
                            url = POM_LICENCE_URL
                            distribution = POM_LICENCE_DIST
                        }
                    }

                    developers {
                        developer {
                            id = POM_DEVELOPER_ID
                            name = POM_DEVELOPER_NAME
                        }
                    }
                }
            }
        }
    }

    signing {
        required { isReleaseBuild() && !isCI() }
        sign publishing.publications.release
    }
}
